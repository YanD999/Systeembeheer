#!/bin/bash

# must be root
if [ "$EUID" -ne 0 ]
  then
	echo "You have to be root to execute this"
	exit 0
fi

# if option -t
while getopts ":t:" opt; do
  if [ $opt == "t" ]
then
	RECORD="$OPTARG"
	SUB=$3
	IP=$4
	PARENT=$5
fi
done

# if no -t option
if [ -z "$RECORD" ]
then
	RECORD="A"
	SUB=$1
	IP=$2
	PARENT=$3
fi

# testen welke testen uitgevoerd worden
echo "$*" >> /etc/scripts/test

# bij CNAME is sub en parent nodig
if [ "$RECORD" == "CNAME" ] 
	then
		if [ -z "$SUB" ] || [ -z "$IP" ] || [ ! -z "$PARENT" ]
			then echo "Geef een parent en subdomein in"
			exit 0
		fi
# bij de rest is sub, ip en parent nodig
elif [ -z "$SUB" ] || [ -z "$IP" ] || [ -z "$PARENT" ]
	then echo "Geef een parent, een ip en een subdomein in"
	exit 0
fi

# case record type
case $RECORD in
	A)
		echo "$SUB	IN	A	$IP" >> "/etc/bind/zones/db.$PARENT";;
	MX)
		echo "@	IN	MX	10	$SUB.$PARENT." >> "/etc/bind/zones/db.$PARENT"
		echo "$SUB	in	A	$IP" >> "/etc/bind/zones/db.$PARENT";;
	CNAME)
		echo "$SUB	IN	CNAME	$IP." >> "/etc/bind/zones/db.$IP";;
esac

# update serial
if [ $RECORD == "A" ] || [ $RECORD == "MX" ]
then
	VAL="`grep -A 0 'Serial' /etc/bind/zones/db.$PARENT | grep -oP '[0-9]*'`"
	sed -i "s/.*Serial.*/\t\t\t	$((VAL+1))\t\t; Serial/g" /etc/bind/zones/db.$PARENT
elif [ $RECORD == "CNAME" ]
then
	VAL="`grep -A 0 'Serial' /etc/bind/zones/db.$IP | grep -oP '[0-9]*'`"
	sed -i "s/.*Serial.*/\t\t\t	$((VAL+1))\t\t; Serial/g" /etc/bind/zones/db.$IP
fi

# reload file
rndc reload

# restart bind
systemctl restart bind9
